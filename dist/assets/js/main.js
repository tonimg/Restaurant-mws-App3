let restaurants,neighborhoods,cuisines,map;var markers=[];const myLazyLoad=new LazyLoad({elements_selector:".myLazyLoad"});document.addEventListener("DOMContentLoaded",e=>{fetchNeighborhoods(),fetchCuisines()}),fetchNeighborhoods=(()=>{DBHelper.fetchNeighborhoods((e,t)=>{e?console.error(e):(self.neighborhoods=t,fillNeighborhoodsHTML())})}),fillNeighborhoodsHTML=((e=self.neighborhoods)=>{const t=document.getElementById("neighborhoods-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,t.append(s)})}),fetchCuisines=(()=>{DBHelper.fetchCuisines((e,t)=>{e?console.error(e):(self.cuisines=t,fillCuisinesHTML())})}),fillCuisinesHTML=((e=self.cuisines)=>{const t=document.getElementById("cuisines-select");e.forEach(e=>{const s=document.createElement("option");s.innerHTML=e,s.value=e,s.setAttribute("role","option"),t.append(s)})});let showMap=document.querySelector("#show-map");showMap.addEventListener("click",()=>{document.getElementById("map").style.height="400px",showMap.style.display="none"}),window.initMap=(()=>{self.map=new google.maps.Map(document.getElementById("map"),{zoom:12,center:{lat:40.722216,lng:-73.987501},scrollwheel:!1}),updateRestaurants()}),updateRestaurants=(()=>{const e=document.getElementById("cuisines-select"),t=document.getElementById("neighborhoods-select"),s=e.selectedIndex,a=t.selectedIndex,n=e[s].value,o=t[a].value;DBHelper.fetchRestaurantByCuisineAndNeighborhood(n,o,(e,t)=>{e?console.error(e):(resetRestaurants(t),fillRestaurantsHTML())})}),resetRestaurants=(e=>{self.restaurants=[],document.getElementById("restaurants-list").innerHTML="",self.markers.forEach(e=>e.setMap(null)),self.markers=[],self.restaurants=e}),fillRestaurantsHTML=((e=self.restaurants)=>{const t=document.getElementById("restaurants-list");e.forEach(e=>{t.append(createRestaurantHTML(e))}),lazyLoadImages(),addMarkersToMap()}),createRestaurantHTML=(e=>{const t=document.createElement("li"),s=document.createElement("img");s.className="restaurant-img myLazyLoad",s.src=DBHelper.imageUrlForRestaurant(e),s.srcset=`./assets/img/${e.id}.jpg, ./assets/img/${e.id}-l.jpg 1x, ./assets/img/${e.id}-l.jpg 2x`,s.alt=`${e.name}`,t.append(s);const a=document.createElement("h3");a.innerHTML=e.name,a.setAttribute("tabindex",0),a.classList.add("focus"),t.append(a);const n=document.createElement("p");n.innerHTML=e.neighborhood,n.setAttribute("tabindex",0),n.classList.add("focus"),t.append(n);const o=document.createElement("p");o.innerHTML=e.address,o.setAttribute("tabindex",0),o.classList.add("focus"),t.append(o);const r=document.createElement("a");r.innerHTML="View Details",r.setAttribute("role","button"),r.setAttribute("aria-label",`More info of ${e.name}`),r.href=DBHelper.urlForRestaurant(e),t.append(r);const i=document.createElement("span");return e.favorite&&i.classList.add("active"),i.innerHTML="â˜†",i.setAttribute("data-id",e.id),i.setAttribute("role","button"),i.title=e.favorite?"Remove from Favorites":"Add to Favorites",i.addEventListener("click",updateFavorite),t.append(i),t});const updateFavorite=e=>{const t=Number(e.target.getAttribute("data-id")),s=!e.target.classList.contains("active");DBHelper.setFavorite(t,s).then(t=>{e.target.classList.toggle("active"),e.target.title=t.favorite?"Remove from Favorites":"Add to Favorites"}).catch(e=>{console.log(e)})};function lazyLoadImages(){var e=[].slice.call(document.querySelectorAll("myLazyLoad"));if("IntersectionObserver"in window){let t=new IntersectionObserver(function(e,s){e.forEach(function(e){if(e.isIntersecting){let s=e.target;s.src=s.dataset.src,s.classList.remove("myLazyLoad"),t.unobserve(s)}})});e.forEach(function(e){t.observe(e)})}else console.log("lazy load for images did not succeed")}addMarkersToMap=((e=self.restaurants)=>{e.forEach(e=>{const t=DBHelper.mapMarkerForRestaurant(e,self.map);google.maps.event.addListener(t,"click",()=>{window.location.href=t.url}),self.markers.push(t)})});